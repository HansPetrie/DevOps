{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sets up a Production or Stage VPC with one private and one public subnet in the first two available availability zones in the region (four subnets total).  Also creates basic ELB and RDS security groups.  Use this as the lowest level starting point for other stacks by reading the outputs using a Lambda function.  Review and edit the mappings prior to launch for different IP schemes for region, public, private, production, and stage.  It is designed to allow you to select Production or Stage for your VPC at launch.  Prevents overlapping private subnet addresses by sticking to a single IP addressing schema.",
  "Mappings": {
    "CIDRPart1": {
      "us-east-1": {
        "Production": "10.0",
        "Stage": "10.1"
      },
      "us-west-1": {
        "Production": "10.10",
        "Stage": "10.11"
      },
      "us-west-2": {
        "Production": "10.20",
        "Stage": "10.21"
      },
      "eu-west-1": {
        "Production": "10.30",
        "Stage": "10.31"
      },
      "eu-central-1": {
        "Production": "10.40",
        "Stage": "10.41"
      },
      "ap-southeast-1": {
        "Production": "10.50",
        "Stage": "10.51"
      },
      "ap-southeast-2": {
        "Production": "10.60",
        "Stage": "10.61"
      },
      "ap-northeast-1": {
        "Production": "10.70",
        "Stage": "10.71"
      },
      "sa-east-1": {
        "Production": "10.80",
        "Stage": "10.81"
      }
    },
    "CIDRPart2": {
      "Public": {
        "Primary": "0.0/20",
        "Secondary": "16.0/20"
      },
      "Private": {
        "Primary": "32.0/20",
        "Secondary": "48.0/20"
      }
    }
  },
  "Parameters": {
    "NetworkType": {
      "Description": "Production or Stage?",
      "Type": "String",
      "AllowedValues": [
        "Production",
        "Stage"
      ],
      "Default": "Stage"
    }
  },
  "Outputs": {
    "PrimaryAZ": {
      "Value": {
        "Fn::Select": [
          "0",
          {
            "Fn::GetAZs": {
              "Ref": "AWS::Region"
            }
          }
        ]
      }
    },
    "SecondaryAZ": {
      "Value": {
        "Fn::Select": [
          "1",
          {
            "Fn::GetAZs": {
              "Ref": "AWS::Region"
            }
          }
        ]
      }
    },
    "VPCID": {
      "Value": {
        "Ref": "VPC"
      }
    },
    "PublicSubnet1ID": {
      "Value": {
        "Ref": "PublicSubnet1"
      }
    },
    "PublicSubnet2ID": {
      "Value": {
        "Ref": "PublicSubnet2"
      }
    },
    "PrivateSubnet1ID": {
      "Value": {
        "Ref": "PrivateSubnet1"
      }
    },
    "PrivateSubnet2ID": {
      "Value": {
        "Ref": "PrivateSubnet2"
      }
    },
    "SGRDSAccess": {
      "Value": {
        "Ref": "SGRDSAccess"
      }
    },
    "SGELBAccess": {
      "Value": {
        "Ref": "SGELBAccess"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Fn::FindInMap": [
                  "CIDRPart1",
                  {
                    "Ref": "AWS::Region"
                  },
                   {
                    "Ref": "NetworkType"
                  }
                ]
              },
              "0.0/16"
            ]
          ]
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default"
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Fn::FindInMap": [
                  "CIDRPart1",
                  {
                    "Ref": "AWS::Region"
                  },
                   {
                    "Ref": "NetworkType"
                  }
                ]
              },
              {
                "Fn::FindInMap": [
                  "CIDRPart2",
                  "Public",
                  "Primary"
                ]
              }
            ]
          ]
        },
        "MapPublicIpOnLaunch": "true",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Fn::FindInMap": [
                  "CIDRPart1",
                  {
                    "Ref": "AWS::Region"
                  },
                  {
                    "Ref": "NetworkType"
                  }
                ]
              },
              {
                "Fn::FindInMap": [
                  "CIDRPart2",
                  "Public",
                  "Secondary"
                ]
              }
            ]
          ]
        },
        "MapPublicIpOnLaunch": "true",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Fn::FindInMap": [
                  "CIDRPart1",
                  {
                    "Ref": "AWS::Region"
                  },
                  {
                    "Ref": "NetworkType"
                  }
                ]
              },
              {
                "Fn::FindInMap": [
                  "CIDRPart2",
                  "Private",
                  "Primary"
                ]
              }
            ]
          ]
        },
        "MapPublicIpOnLaunch": "false",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Fn::FindInMap": [
                  "CIDRPart1",
                  {
                    "Ref": "AWS::Region"
                  },
                  {
                    "Ref": "NetworkType"
                  }
                ]
              },
              {
                "Fn::FindInMap": [
                  "CIDRPart2",
                  "Private",
                  "Secondary"
                ]
              }
            ]
          ]
        },
        "MapPublicIpOnLaunch": "false",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "NetworkAclId": {
          "Fn::GetAtt": [
            "VPC",
            "DefaultNetworkAcl"
          ]
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "NetworkAclId": {
          "Fn::GetAtt": [
            "VPC",
            "DefaultNetworkAcl"
          ]
        }
      }
    },
    "SGELBAccess": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow http and https from anywhere",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "SGRDSAccess": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group to allow RDS Access",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    }
  }
}
